name: Docker

on:
  release:
    types: [published]

env:
  IMAGE_NAME: ${{ github.repository }}
  GITHUB_TAG: ghcr.io/ps-pat/${{ env.IMAGE_NAME }}
  DOCKERHUB_TAG: docker.io/patfou/${{ env.IMAGE_NAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.9.0

      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@v6.13.0
        with:
          context: .
          file: "Containerfile"
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            ghcr.io/ps-pat/julia-remoterepl:latest
            ghcr.io/ps-pat/julia-remoterepl:${{ github.ref_name }}
            docker.io/patfou/julia-remoterepl:latest
            docker.io/patfou/julia-remoterepl:${{ github.ref_name }}

      - name: Generate artifact attestation (Github)
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.GITHUB_TAG }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Generate artifact attestation (Dockerhub)
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: index.${{ env.DOCKERHUB_TAG }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
